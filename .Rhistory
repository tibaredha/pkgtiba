library(WDI)
world_infanct_mortality_raw <- WDI(country = "all", "SH.DYN.MORT", extra = TRUE, start = 2015, end = 2021)
world_infanct_mortality_raw <- WDI(country = "all", "SH.DYN.MORT", extra = TRUE, start = 2015, end = 2021)
world_infanct_mortality_raw <- WDI(country = "all", "SH.DYN.MORT", extra = TRUE, start = 2015, end = 2021)
world_infanct_mortality_raw <- WDI(country = "all", "SH.DYN.MORT", extra = TRUE, start = 2015, end = 2021)
world_infanct_mortality_raw <- WDI(country = "all", "SH.DYN.MORT", extra = TRUE, start = 2015, end = 2021)
knitr::opts_chunk$set(echo = TRUE)
1+1
install.packages("citr")
install.packages("citr")
install.packages("citr")
install.packages("citation")
bookdown:::mathquill()
install.packages("C:/Users/cw/Desktop/citr_0.3.2.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/cw/Desktop/citr.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/cw/Desktop/citr.zip", repos = NULL, type = "source")
install.packages("C:/Users/cw/Desktop/citr", repos = NULL, type = "source")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
head(cars)
mary(cars)
mary(cars)
summary(cars)
summary(cars)
age <-  data.frame(age = c(15, 29, 54, 53, 28))
age %>%
mutate(age_bracket = case_when(age >= 28 & age < 53 ~ "middle",
age < 28 ~ "young",
age >= 53 ~ "old"))
library(tidyverse)
age <-  data.frame(age = c(15, 29, 54, 53, 28))
age %>%
mutate(age_bracket = case_when(age >= 28 & age < 53 ~ "middle",
age < 28 ~ "young",
age >= 53 ~ "old"))
age <-  data.frame(age = c(15, 29, 54, 53, 28,70))
age %>%
mutate(age_bracket = case_when(age >= 28 & age < 53 ~ "middle",
age < 28 ~ "young",
age >= 53 ~ "old"))
str(age)
age <- age %>%
mutate(age_bracket = case_when(age >= 28 & age < 53 ~ "middle",
age < 28 ~ "young",
age >= 53 ~ "old"))
str(age)
age$age_bracket <- as.factor(age$age_bracket)
str(age)
levels(age$age_bracket)
install.packages("epidict")
install.packages("epidict")
install.packages("epidata")
install.packages("apyramid")
quarto::quarto_render("hello.qmd")
x <- map(1:100,\(x)Sys.sleep(0.1))
x <- Map(1:100,\(x)Sys.sleep(0.1))
install.packages("remedy")
library(remedy)
library(pacman)
pacman::p_load(
rio,          # File import
here,         # File locator
skimr,        # get overview of data
tidyverse,    # data management + ggplot2 graphics,
gtsummary,    # summary statistics and tests
rstatix,      # statistics
corrr,        # correlation analayis for numeric variables
janitor,      # adding totals and percents to tables
flextable     # converting tables to HTML
)
pacman::p_load(
rio,          # File import
here,         # File locator
skimr,        # get overview of data
tidyverse,    # data management + ggplot2 graphics,
gtsummary,    # summary statistics and tests
rstatix,      # statistics
corrr,        # correlation analayis for numeric variables
janitor,      # adding totals and percents to tables
flextable     # converting tables to HTML
)
pacman::p_load(
rio,          # File import
here,         # File locator
skimr,        # get overview of data
tidyverse,    # data management + ggplot2 graphics,
gtsummary,    # summary statistics and tests
rstatix,      # statistics
corrr,        # correlation analayis for numeric variables
janitor,      # adding totals and percents to tables
flextable     # converting tables to HTML
)
# import the linelist
linelist <- import("linelist_cleaned.rds")
# install the latest version of the Epi R Handbook package
pacman::p_install_gh("appliedepi/epirhandbook")
# download the offline handbook to your computer
download_book()
# install the latest version of the Epi R Handbook package
pacman::p_install_gh("appliedepi/epirhandbook")
install.packages("EpiReport")
# Ensures the package "pacman" is installed
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
rio,          # File import
here,         # File locator
skimr,        # get overview of data
tidyverse,    # data management + ggplot2 graphics,
gtsummary,    # summary statistics and tests
rstatix,      # statistics
corrr,        # correlation analayis for numeric variables
janitor,      # adding totals and percents to tables
flextable     # converting tables to HTML
)
library(remotes)
# Development version of epicontacts (for transmission chains with a time x-axis)
pacman::p_install_gh("reconhub/epicontacts@timeline")
# The package for this handbook, which includes all the example data
pacman::p_install_gh("appliedepi/epirhandbook")
install.packages("remotes")
install.packages("remotes")
# Development version of epicontacts (for transmission chains with a time x-axis)
pacman::p_install_gh("reconhub/epicontacts@timeline")
remotes::install_github("r-lib/conflicted")
remotes::install_github("r-lib/conflicted")
# The package for this handbook, which includes all the example data
pacman::p_install_gh("appliedepi/epirhandbook")
remotes::install_github("r-lib/conflicted")
remotes::install_github("r-lib/conflicted")
Sys.which("make")
pkgbuild::check_rtools(TRUE)
pkgbuild::has_rtools(TRUE)
pkgbuild::has_build_tools(debug=TRUE)
Sys.which("make")
pkgbuild::check_rtools(TRUE)
pkgbuild::has_rtools(TRUE)
# Found in Rtools 4.0 installation folder
# [1] TRUE
#
pkgbuild::has_build_tools(debug=TRUE)
# Found in Rtools 4.0 installation folder
# [1] TRUE
#
devtools::find_rtools(debug=TRUE)
# Found in Rtools 4.0 installation folder
# [1] TRUE
#
# # After manually adding  C:\rtools40\mingw64\bin to a new env variable BINPREF:
Sys.getenv("BINPREF")
version
# version
version
Sys.getenv("Key1")
setwd("D:/R_prgramme/projects")
Sys.getenv("Key1")
Sys.getenv("Key1")
Sys.getenv("Key1")
Sys.getenv("Key2")
ls
print("tibaredha")
Sys.getenv("nom")
usethis::edit_r_environ()
Sys.getenv("PATH")
Sys.getenv("nom")
Sys.getenv("prenom")
Sys.setenv("prenom")
Sys.setenv("BINPREF")
Sys.setenv("BINPREF")
Sys.getenv("BINPREF")
Sys.getenv("nom")
install.packages("tidyverse")
install.packages(c("BiocManager", "blogdown", "bookdown", "broom", "bslib", "cachem", "checkmate", "class", "clock", "crul", "curl", "datawizard", "evaluate", "flextable", "fs", "future.apply", "gargle", "googledrive", "googlesheets4", "gt", "gtsummary", "Hmisc", "httpuv", "httr", "httr2", "insight", "jsonlite", "KernSmooth", "knitr", "labelled", "later", "learnr", "lme4", "markdown", "MASS", "Matrix", "matrixStats", "multcomp", "mvtnorm", "nnet", "norm", "osmdata", "parallelly", "pkgbuild", "plotly", "profvis", "quantmod", "RcppArmadillo", "recipes", "reticulate", "rgl", "rlang", "rmarkdown", "rticles", "s2", "sass", "servr", "sf", "sp", "styler", "survey", "sys", "testthat", "tidycensus", "tidymodels", "tigris", "tseries", "tzdb", "units", "usethis", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "wk", "xml2", "yardstick"))
library(tidyverse)
.libPaths()
library(tidyverse)
data(
)
AirPassengers
x <- AirPassengers
x
x %>% head()
library(tidyverse)
library(tidyverse)
install.packages('servr')
install.packages('pandoc')
install.packages('bookdown')
install.packages('evaluate')
install.packages('bookdown')
install.packages("C:/Users/cw/Desktop/bookdown_0.34.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/cw/Desktop/knitr_1.43.zip", repos = NULL, type = "win.binary")
library(bookdownplus)
bookdownplus()
bookdownplus()
more_output()
template()
install.packages("C:/Users/cw/Desktop/bookdownplus_1.5.8.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/cw/Desktop/bookdownplus_1.5.8.zip", repos = NULL, type = "win.binary")
bookdownplus()
library(bookdownplus)
bookdownplus()
install.packages("rticles")
install.packages("C:/Users/cw/Desktop/rticles_0.25.zip", repos = NULL, type = "win.binary")
demo()
colors
library(tidyverse)
gc()
install.packages("available")
library(available)
available("tibaredha")
available("tibaredha")
available("tibaredha")
available("tibaredha")
available("tibaredha")
available("tibaredha")
available("tibaredha")
library(available)
available("tibaredha")
install.packages("usethis")
install.packages("usethis")
install.packages("C:/Users/cw/Desktop/usethis_2.2.1.zip", repos = NULL, type = "win.binary")
library(usethis)
library(devtools)
remove.packages("httpuv")
remove.packages("httpuv")
library(devtools)
install.packages("httpuv")
install.packages("later")
install.packages("later")
install.packages("httpuv")
library(devtools)
install.packages("pkgbuild")
install.packages("pkgbuild")
install.packages("C:/Users/cw/Desktop/pkgbuild_1.4.1.zip", repos = NULL, type = "win.binary")
library(devtools)
install.packages("profvis")
library(devtools)
usethis::create_package("C://mypackage")
library(devtools)
usethis::create_package("C://mypackage")
usethis::create_package("C://mypackage")
R CMD INSTALL packagename
library(devtools)
devtools::create(mimi)
devtools::create("mimi")
library(devtools)
install_github("tibaredha/pkgtiba")
file.path(R.home(), "bin/x64")
list.files()
setwd("C:/Users/cw/Desktop/pkgtiba")
